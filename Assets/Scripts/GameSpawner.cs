using UnityEngine;
using Unity.Netcode;

public class GameSpawner : NetworkBehaviour
{
    public GameObject playerPrefab;
    public Transform playerSpawnPoint; // ‚úÖ ‡∏ï‡∏≥‡πÅ‡∏´‡∏ô‡πà‡∏á Spawn ‡∏ó‡∏µ‡πà‡∏Å‡∏≥‡∏´‡∏ô‡∏î

    public override void OnNetworkSpawn()
    {
        if (IsServer) 
        {
            // ‚úÖ Spawn Host ‡∏ó‡∏±‡∏ô‡∏ó‡∏µ‡∏ó‡∏µ‡πà‡πÄ‡∏£‡∏¥‡πà‡∏°‡πÄ‡∏Å‡∏°
            SpawnPlayer(NetworkManager.Singleton.LocalClientId);

            // ‚úÖ Spawn Client ‡πÄ‡∏°‡∏∑‡πà‡∏≠‡πÄ‡∏ä‡∏∑‡πà‡∏≠‡∏°‡∏ï‡πà‡∏≠
            NetworkManager.Singleton.OnClientConnectedCallback += SpawnPlayer;
        }
    }

    private void SpawnPlayer(ulong clientId)
    {
        if (!IsServer) return;

        Debug.Log($"üéÆ Client {clientId} ‡πÄ‡∏ä‡∏∑‡πà‡∏≠‡∏°‡∏ï‡πà‡∏≠ -> Spawn Player");

        // ‚úÖ ‡πÉ‡∏ä‡πâ‡∏ï‡∏≥‡πÅ‡∏´‡∏ô‡πà‡∏á‡∏à‡∏≤‡∏Å SpawnPoint
        Vector3 spawnPosition = playerSpawnPoint != null ? playerSpawnPoint.position : new Vector3(0, 1, 0);

        GameObject playerInstance = Instantiate(playerPrefab, spawnPosition, Quaternion.identity);
        
        if (playerInstance == null)
        {
            Debug.LogError("‚ùå Player Spawn ‡πÑ‡∏°‡πà‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à!");
        }
        else
        {
            Debug.Log("‚úÖ Player Spawn ‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à‡∏ó‡∏µ‡πà " + spawnPosition);
            playerInstance.GetComponent<NetworkObject>().SpawnAsPlayerObject(clientId);
        }
    }
}
